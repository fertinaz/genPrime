package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
)

/*
	Function compares two given slices.
	Input:
		pGen: primes generated by this code
		pDat: primes read from file
	Return:
		bool: slices are equal or not
*/
func cmpSlices(pGen []int, pDat []int) bool {

	if (pGen == nil) != (pDat == nil) {
		return false
	}

	if len(pGen) != len(pDat) {
		return false
	}

	for i := range pGen {
		if pDat[i] != pGen[i] {
			return false
		}
	}

	return true
}

/*
	Function reads primes from file and compares
	with our generated values.
	Input:
		p: primes generated by this code
		l: lower bound of the input range
		u: upper bound of the input range
	Return:
		bool: results validated or not
*/
func validate(p []int, l, u int) (validated bool) {

	file, err := os.Open("primes.txt")
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()

	var pVals []int
	scanner := bufio.NewScanner(file)
	for scanner.Scan() {
		pValStr := strings.TrimSpace(scanner.Text())
		pValInt, _ := strconv.Atoi(pValStr)
		if int(pValInt) >= l && int(pValInt) <= u {
			pVals = append(pVals, int(pValInt))
		}
	}

	if err := scanner.Err(); err != nil {
		log.Fatal(err)
	}

	fmt.Println("Primes from database:")
	printSlice(pVals)
	validated = cmpSlices(p, pVals)

	return validated
}
